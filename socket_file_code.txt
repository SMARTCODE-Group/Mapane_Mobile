
  initSocket(String identifier) async {
    setState(() => _isProbablyConnected[identifier] = true);
    SocketIO socket = await manager.createInstance(SocketOptions(
        //Socket IO server URI
        URI,
        nameSpace: (identifier == "namespaced") ? "/adhara" : "/",
        //Query params - can be used for authentication
        query: {
          "auth": "--SOME AUTH STRING---",
          "info": "new connection from adhara-socketio",
          "timestamp": DateTime.now().toString()
        },
        //Enable or disable platform channel logging
        enableLogging: false,
        transports: [Transports.POLLING] //Enable required transport
        ));
    socket.onConnect((data) {
      print("connected...");
      print(data);
    });
    socket.onConnectError(manageLoader());
    socket.onConnectTimeout(manageLoader());
    socket.onError(manageLoader());
    socket.onDisconnect(manageLoader());
    socket.connect();
    sockets[identifier] = socket;
    socket.on("createAlertNo", (data) => print(data));
    socket.on("createAlertOk", (data) {
      print("not connected but receive");
      print(data);
      setState(() {
        brikit.clear();
      });
      if (context.read<UserProvider>().popupVal) {
        if (addresse.split(",")[2] == data['alert']['address'].split(",")[2] &&
            data['alert']['category']['name'] != "S.O.S") {
          audioPlugin.play("http://mapane.smartcodegroup.com/alert_notif.mp3");
          context
              .read<AlertProvider>()
              .pushNotification(Alert.fromJson(data['alert']));
        }
      }
      context.read<AlertProvider>().getAlertList(false, addresse);
    });
    socket.on("createAlertOkUser", (data) {
      Navigator.pop(context);
      setState(() => loadera = false);
      context.read<AlertProvider>().getAlertList(false, addresse);
      //sample event
      print("createAlertOkUser");
      print(data);
      if (data.containsKey('message')) {
        if (data['id'] == userId) {
          if (data['message'] == "alerte inactive") {
            showGeneralDialog(
                context: context,
                barrierDismissible: true,
                barrierLabel:
                    MaterialLocalizations.of(context).modalBarrierDismissLabel,
                barrierColor: AppColors.whiteColor.withOpacity(0.96),
                transitionDuration: const Duration(milliseconds: 200),
                pageBuilder: (BuildContext buildContext, Animation animation,
                    Animation secondaryAnimation) {
                  return Center(
                    child: Card(
                      shadowColor: Colors.transparent,
                      margin: EdgeInsets.symmetric(horizontal: 0, vertical: 0),
                      child: Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Container(
                            width: getSize(303, "width", context),
                            // height: getSize(256, "height", context),
                            // padding: EdgeInsets.all(getSize(0,"height",context)),
                            decoration: BoxDecoration(
                              color: AppColors.whiteColor,
                              borderRadius: BorderRadius.circular(
                                  getSize(20, "height", context)),
                              boxShadow: [
                                BoxShadow(
                                  color: Color(0xFF000000).withOpacity(0.11),
                                  spreadRadius: 5,
                                  blurRadius: 10,
                                  offset: Offset(
                                      0, 5), // changes position of shadow
                                ),
                              ],
                            ),
                            child: Container(
                              padding: EdgeInsets.symmetric(
                                  vertical: getSize(33, "height", context),
                                  horizontal: getSize(28, "width", context)),
                              child: Column(
                                children: [
                                  Container(
                                    width: getSize(100, "height", context),
                                    height: getSize(100, "height", context),
                                    padding: EdgeInsets.symmetric(
                                        vertical: getSize(0, "height", context),
                                        horizontal:
                                            getSize(0, "width", context)),
                                    decoration: BoxDecoration(
                                      borderRadius: BorderRadius.circular(100),
                                      color: AppColors.greenColor
                                          .withOpacity(0.35),
                                    ),
                                    child: Stack(
                                      overflow: Overflow.visible,
                                      children: <Widget>[
                                        Positioned(
                                          child: Center(
                                              child: Image.asset(
                                            'assets/images/Map pin-3.png',
                                            height: getSize(
                                                45.6, "height", context),
                                            width: getSize(
                                                37.77, "width", context),
                                          )),
                                        ),
                                        Positioned(
                                          left: getSize(60, "width", context),
                                          top: getSize(61, "height", context),
                                          child: Padding(
                                            padding: EdgeInsets.symmetric(
                                                vertical: getSize(
                                                    9, "width", context),
                                                horizontal: getSize(
                                                    9, "height", context)),
                                            child: SizedBox(
                                              width: getSize(
                                                  31, "height", context),
                                              height: getSize(
                                                  31, "height", context),
                                              child: Card(
                                                elevation: 2.5,
                                                shape: RoundedRectangleBorder(
                                                    borderRadius:
                                                        BorderRadius.all(
                                                            Radius.circular(
                                                                100))),
                                                child: Center(
                                                  child: Icon(
                                                    Icons.check,
                                                    size: getSize(
                                                        9, "height", context),
                                                    color: AppColors.greenColor,
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ),
                                        )
                                      ],
                                    ),
                                  ),
                                  SizedBox(
                                    height: getSize(21, "height", context),
                                  ),
                                  Text(
                                    "Alerte envoyé",
                                    style: AppTheme.defaultParagraph,
                                  ),
                                  SizedBox(
                                    height: getSize(12, "height", context),
                                  ),
                                  Container(
                                    width: getSize(220, "width", context),
                                    child: Text(
                                      "Une alerte de ce type a déjà été créee dans votre zone, Merci.",
                                      style: AppTheme.bodyText1.copyWith(
                                        color: AppColors.blackColor
                                            .withOpacity(0.5),
                                      ),
                                      textAlign: TextAlign.center,
                                    ),
                                  )
                                ],
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  );
                });
          } else {
            showGeneralDialog(
                context: context,
                barrierDismissible: true,
                barrierLabel:
                    MaterialLocalizations.of(context).modalBarrierDismissLabel,
                barrierColor: AppColors.whiteColor.withOpacity(0.96),
                transitionDuration: const Duration(milliseconds: 200),
                pageBuilder: (BuildContext buildContext, Animation animation,
                    Animation secondaryAnimation) {
                  return Center(
                    child: Card(
                      shadowColor: Colors.transparent,
                      margin: EdgeInsets.symmetric(horizontal: 0, vertical: 0),
                      child: Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Container(
                            width: getSize(303, "width", context),
                            // height: getSize(256, "height", context),
                            // padding: EdgeInsets.all(getSize(0,"height",context)),
                            decoration: BoxDecoration(
                              color: AppColors.whiteColor,
                              borderRadius: BorderRadius.circular(
                                  getSize(20, "height", context)),
                              boxShadow: [
                                BoxShadow(
                                  color: Color(0xFF000000).withOpacity(0.11),
                                  spreadRadius: 5,
                                  blurRadius: 10,
                                  offset: Offset(
                                      0, 5), // changes position of shadow
                                ),
                              ],
                            ),
                            child: Container(
                              padding: EdgeInsets.symmetric(
                                  vertical: getSize(33, "height", context),
                                  horizontal: getSize(28, "width", context)),
                              child: Column(
                                children: [
                                  Container(
                                    width: getSize(100, "height", context),
                                    height: getSize(100, "height", context),
                                    padding: EdgeInsets.symmetric(
                                        vertical:
                                            getSize(36, "height", context),
                                        horizontal:
                                            getSize(30, "width", context)),
                                    decoration: BoxDecoration(
                                      borderRadius: BorderRadius.circular(100),
                                      color: Colors.red.withOpacity(0.35),
                                    ),
                                    child: Center(
                                        child: Icon(
                                      Icons.close,
                                      size: getSize(38, "height", context),
                                      color: Colors.white,
                                    )),
                                  ),
                                  SizedBox(
                                    height: getSize(21, "height", context),
                                  ),
                                  Text(
                                    "Erreur",
                                    style: AppTheme.defaultParagraph,
                                  ),
                                  SizedBox(
                                    height: getSize(12, "height", context),
                                  ),
                                  Container(
                                    width: getSize(220, "width", context),
                                    child: Text(
                                      data['message'],
                                      style: AppTheme.bodyText1.copyWith(
                                        color: AppColors.blackColor
                                            .withOpacity(0.5),
                                      ),
                                      textAlign: TextAlign.center,
                                    ),
                                  )
                                ],
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  );
                });
          }
        }
      } else {
        if (data['alert']['postedBy']['_id'] == userId)
          showGeneralDialog(
              context: context,
              barrierDismissible: true,
              barrierLabel:
                  MaterialLocalizations.of(context).modalBarrierDismissLabel,
              barrierColor: AppColors.whiteColor.withOpacity(0.96),
              transitionDuration: const Duration(milliseconds: 200),
              pageBuilder: (BuildContext buildContext, Animation animation,
                  Animation secondaryAnimation) {
                return Center(
                  child: Card(
                    shadowColor: Colors.transparent,
                    margin: EdgeInsets.symmetric(horizontal: 0, vertical: 0),
                    child: Column(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        Container(
                          width: getSize(303, "width", context),
                          // height: getSize(256, "height", context),
                          // padding: EdgeInsets.all(getSize(0,"height",context)),
                          decoration: BoxDecoration(
                            color: AppColors.whiteColor,
                            borderRadius: BorderRadius.circular(
                                getSize(20, "height", context)),
                            boxShadow: [
                              BoxShadow(
                                color: Color(0xFF000000).withOpacity(0.11),
                                spreadRadius: 5,
                                blurRadius: 10,
                                offset:
                                    Offset(0, 5), // changes position of shadow
                              ),
                            ],
                          ),
                          child: Container(
                            padding: EdgeInsets.symmetric(
                                vertical: getSize(33, "height", context),
                                horizontal: getSize(28, "width", context)),
                            child: Column(
                              children: [
                                Container(
                                  width: getSize(100, "height", context),
                                  height: getSize(100, "height", context),
                                  padding: EdgeInsets.symmetric(
                                      vertical: getSize(0, "height", context),
                                      horizontal: getSize(0, "width", context)),
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.circular(100),
                                    color:
                                        AppColors.greenColor.withOpacity(0.35),
                                  ),
                                  child: Stack(
                                    overflow: Overflow.visible,
                                    children: <Widget>[
                                      Positioned(
                                        child: Center(
                                            child: Image.asset(
                                          'assets/images/Map pin-3.png',
                                          height:
                                              getSize(45.6, "height", context),
                                          width:
                                              getSize(37.77, "width", context),
                                        )),
                                      ),
                                      Positioned(
                                        left: getSize(60, "width", context),
                                        top: getSize(61, "height", context),
                                        child: Padding(
                                          padding: EdgeInsets.symmetric(
                                              vertical:
                                                  getSize(9, "width", context),
                                              horizontal: getSize(
                                                  9, "height", context)),
                                          child: SizedBox(
                                            width:
                                                getSize(31, "height", context),
                                            height:
                                                getSize(31, "height", context),
                                            child: Card(
                                              elevation: 2.5,
                                              shape: RoundedRectangleBorder(
                                                  borderRadius:
                                                      BorderRadius.all(
                                                          Radius.circular(
                                                              100))),
                                              child: Center(
                                                child: Icon(
                                                  Icons.check,
                                                  size: getSize(
                                                      9, "height", context),
                                                  color: AppColors.greenColor,
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      )
                                    ],
                                  ),
                                ),
                                SizedBox(
                                  height: getSize(21, "height", context),
                                ),
                                Text(
                                  "Alerte envoyé",
                                  style: AppTheme.defaultParagraph,
                                ),
                                SizedBox(
                                  height: getSize(12, "height", context),
                                ),
                                Container(
                                  width: getSize(220, "width", context),
                                  child: Text(
                                    "Votre alerte a été signalée à tous les utilisateurs de Mapane",
                                    style: AppTheme.bodyText1.copyWith(
                                      color:
                                          AppColors.blackColor.withOpacity(0.5),
                                    ),
                                    textAlign: TextAlign.center,
                                  ),
                                )
                              ],
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),
                );
              });
      }
    });
  }